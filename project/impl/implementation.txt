> No DNS alla fine

> Creare account "eval" su PAAS (da fare) e IAAS (+ keypair)
                        su OpenStack (associare progetto ***REMOVED***)
                        per il cluster PAAS

echo IAAS_IP: ${IAAS_IP:=10.235.1.219}
echo PAAS_IP: ${PAAS_IP:=10.235.1.119}

== CLUSTER DETAILS ========================

== WEB-SERVER DOCKER IMAGE ================

The Dockerfile is a simple Tomcat (Java 16, 10.0.6) container on which the application is slapped onto.

== SQL-SERVER DOCKER IMAGE ================

Also this Dockerfile is based on a PostgreSQL 12 image. Two files are required, one for creating the table structure, 
the other for the actual data. The second one is not on GitHub as it contains confidential data.

== DOCKER REGISTRY ========================

== RESOURCE SERVER (Swift) ================

The Resource server requires the insertion of the assets folder, not on GitHub (since it's a very large binary one).
Its contents strictly depend on the contents of the database.

echo ADMIN_TOKEN: ${ADMIN_TOKEN:=AUTH_09709b84a64a4e3cbc903232a7bd145e}
echo RESOURCE_SERVER: ${RESOURCE_SERVER:=http://${IAAS_IP}:8080/v1/${ADMIN_TOKEN}/resource-server}
echo IDENTITY_SERVER: ${IDENTITY_SERVER:=http://${IAAS_IP}/identity/v3/auth/tokens}

echo PROJECT_REST_TOKEN=$(curl -i -H "Content-Type: application/json" -d '{ "auth": {
    "identity": {
      "methods": ["password"],
      "password": {
        "user": {
          "name": "admin",
          "domain": { "id": "default" },
          "password": "password"
        }
      }
    },
    "scope": {
      "project": {
        "name": "***REMOVED***",
        "domain": { "id": "default" }
      }
    }
  }
}' "${IDENTITY_SERVER}" | tee response.txt | grep X-Subject-Token | sed "s/X-Subject-Token: //")

This token must then be used in PUT requests (GET requests do not require authentication) towards the server. 
Its duration is specified in the response payload (saved in response.txt).

curl ${RESOURCE_SERVER}/${RESOURCE} -i -X PUT -H "X-Auth-Token: ${PROJECT_REST_TOKEN}" 